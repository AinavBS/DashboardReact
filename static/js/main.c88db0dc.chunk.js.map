{"version":3,"sources":["views/Dashboard/GroupsFromItem.js","views/Dashboard/MachinesDashboard.js","views/Dashboard/ItemGroupsTiming.js","views/Dashboard/GroupsFromProject.js","views/Dashboard/Dashboard.js","polyfill.js","App.js","serviceWorker.js","index.js"],"names":["GroupsFromItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","RouteInfoFromDB","projectNum","groupdata","ProjectNum","itemNum","ItemNum","routeName","GroupRouteName","groupName","GroupName","isloadedroutes","_this2","window","location","hostname","ApiGetRouteInfoFromSpecificGroups","fetch","then","response","json","setState","catch","error","console","log","nextProps","prevProps","prevState","_this3","progressPar","pos","react_default","a","createElement","Progress","value","color","className","numStation","calcualted","toFixed","Row","CardBody","style","padding","React","Component","MachinesDashboard","MachinesCurrentdetails","IsLoaded","ApiGetMachinesCurrentdetails","Pname","Iname","Gname","Count","Scanned","filter","details","MachineName","Machine","ProjectName","ItemName","PartCount","ScannedPartCount","Card","background","ItemGroupsTiming","Group","CurrentPrepTime","EstPrepTime","animated","position","CurrentCarpTime","EstCarpTime","CurrentColorTime","EstColorTime","GroupsFromProject","handleSelectChangeItemName","bind","assertThisInitialized","GroupsFromDB","itemNumFetching","callParent","e","currentTarget","getAttribute","ApiGetGroupsFromSpecificItem","cardColor","progressColor","counterAccomplishedGroup","itemnum","handler","map","group","GroupStatus","itemdata","ItemGroupCount","boxSizing","Button","active","block","aria-pressed","onClick","data-itemnum","wordWrap","bar","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","machineBar","optionsMachineBar","evt","item","scales","yAxes","ticks","beginAtZero","stepSize","min","max","navbarHader","DirectionProvider_default","direction","DIRECTIONS","RTL","Navbar","Nav","NavLink","href","height","src","brandPrimary","lazy","__webpack_require__","getStyle","brandSuccess","brandInfo","brandDanger","cardChartData1","cardChartData2","Math","apply","random","floor","data1","data2","data3","i","push","hexToRgba","ceil","Dashboard","handleSelectChangeProjectName","event","IsLoadedGroups","projectNumTmp","target","selectedIndex","selectedProjectTmp","text","ApiGetItemFromSpecificProject","ApiGetGroupFromSpecificProject","ItemsFromDB","AllGroupProjectFromDB","IsLoadedAllGroupProjectFromDB","loading","toggle","onRadioBtnClick","dropdownOpen","radioSelected","ProjectsFromDB","GetAllGroupsProjects","IsLoadedItem","IsLoadedAllGroupsProjects","someValue","dayCalculate","Project","round","Date","SupplyDate","getTime","machinesName","mlist","countsWaiting","t","startsWith","machineWait","index","array","indexOf","station","slice","length","count","machinesCounts","maxWaiting","backgroundCharts","colored","j","_this4","_this5","SetProjectDataToBarChart","SetGroupsDataToBarChart","paddingRight","marginLeft","marginRight","Col","xs","sm","lg","display","CardHeader","es","Glist","Dashboard_GroupsFromItem","FormGroup","md","Input","type","name","id","onChange","hidden","key","projnum","Item","Dashboard_GroupsFromProject","Dashboard_ItemGroupsTiming","Badge","pill","CardGroup","machine","Dashboard_MachinesDashboard","Projects","CustomEvent","params","bubbles","cancelable","detail","undefined","document","createEvent","initCustomEvent","prototype","Event","Login","Promise","all","Register","Page404","Page500","App","HashRouter","Suspense","fallback","Switch","Route","exact","path","render","Boolean","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c88db0dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardGroup, Col, Row } from 'reactstrap';\r\n// import GroupsFromProject from './GroupsFromProject';\r\nimport { Card, CardBody, Progress } from 'reactstrap';\r\n\r\n\r\nclass GroupsFromItem extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      RouteInfoFromDB: [],\r\n      projectNum : this.props.groupdata.ProjectNum,\r\n      itemNum : this.props.groupdata.ItemNum,\r\n      routeName: this.props.groupdata.GroupRouteName,\r\n      groupName: this.props.groupdata.GroupName,\r\n      isloadedroutes : false,\r\n      // counter: 0\r\n      // shouldComponentUpdateBoolean : false\r\n    };\r\n\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n\r\n      // this.state.shouldComponentUpdateBoolean = true;\r\n      // {console.log(\"WillMount-props.groupdata\")}\r\n      // {console.log(this.props.groupdata)}\r\n      if(window.location.hostname === \"localhost\"){\r\n          var ApiGetRouteInfoFromSpecificGroups = 'http://localhost:50474/api/GetGroupInRouteInformaion?projectNum='+this.state.projectNum+ \"&ItemNum=\" + this.state.itemNum+\"&routeName=\" + this.state.routeName+\"&groupName=\" + this.state.groupName\r\n      }\r\n      else{\r\n        var ApiGetRouteInfoFromSpecificGroups = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetGroupInRouteInformaion?projectNum='+this.state.projectNum+ \"&ItemNum=\" + this.state.itemNum+\"&routeName=\" + this.state.routeName+\"&groupName=\" + this.state.groupName\r\n      }\r\n  fetch(ApiGetRouteInfoFromSpecificGroups)\r\n    .then(response => response.json())\r\n    .then(RouteInfoFromDB => this.setState({\r\n        RouteInfoFromDB:RouteInfoFromDB,\r\n        isloadedroutes : true\r\n        // shouldComponentUpdateBoolean : false\r\n\r\n  }))\r\n  .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ projectNum: nextProps.groupdata.ProjectNum });  \r\n    this.setState({ itemNum: nextProps.groupdata.ItemNum });  \r\n    this.setState({ routeName: nextProps.groupdata.GroupRouteName });  \r\n    this.setState({ groupName: nextProps.groupdata.GroupName });  \r\n  }\r\n\r\n//   shouldComponentUpdate(nextProps) {\r\n//     if(this.state.shouldComponentUpdateBoolean){\r\n//       this.state.shouldComponentUpdateBoolean = false;\r\n//       return true;\r\n//     }\r\n//     return this.state.itemNum !== nextProps.groupdata.ItemNum;\r\n// }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n      if (prevState.itemNum !== this.state.itemNum) {\r\n        if(window.location.hostname === \"localhost\"){\r\n          var ApiGetRouteInfoFromSpecificGroups = 'http://localhost:50474/api/GetGroupInRouteInformaion?projectNum='+this.state.projectNum+ \"&ItemNum=\" + this.state.itemNum+\"&routeName=\" + this.state.routeName+\"&groupName=\" + this.state.groupName\r\n        }\r\n        else{\r\n          var ApiGetRouteInfoFromSpecificGroups = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetGroupInRouteInformaion?projectNum='+this.state.projectNum+ \"&ItemNum=\" + this.state.itemNum+\"&routeName=\" + this.state.routeName+\"&groupName=\" + this.state.groupName\r\n        }\r\n        fetch(ApiGetRouteInfoFromSpecificGroups)\r\n          .then(response => response.json())\r\n          .then(RouteInfoFromDB => this.setState({\r\n              RouteInfoFromDB:RouteInfoFromDB,\r\n              isloadedroutes : true\r\n        }))\r\n        .catch(error => console.log('parsing failed', error))\r\n        }\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n  if(this.state.isloadedroutes)\r\n  {\r\n    let progressPar;\r\n    if (this.state.RouteInfoFromDB.pos==0){\r\n      progressPar= <Progress value=\"100\" color='danger' className=\"mb-3\">{this.state.RouteInfoFromDB.pos}/{this.state.RouteInfoFromDB.numStation}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0%</Progress>\r\n    }\r\n    else if (this.state.RouteInfoFromDB.pos==this.state.RouteInfoFromDB.numStation){\r\n      progressPar= <Progress value=\"100\" color='success' className=\"mb-3\">{this.state.RouteInfoFromDB.pos}/{this.state.RouteInfoFromDB.numStation}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100%</Progress>\r\n    }\r\n    else{\r\n      let calcualted = ((this.state.RouteInfoFromDB.pos/this.state.RouteInfoFromDB.numStation)*100).toFixed()\r\n      progressPar= <Progress value={(this.state.RouteInfoFromDB.pos)/(this.state.RouteInfoFromDB.numStation)*100} color='info' className=\"mb-3\">{this.state.RouteInfoFromDB.pos}/{this.state.RouteInfoFromDB.numStation}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{calcualted}%</Progress>\r\n    }\r\n\r\n      return(\r\n        <div className=\"animated fadeIn\">\r\n        <Row>\r\n          {\r\n            <CardBody style={{padding:'0 30px'}}>\r\n            <span className=\"title\"><strong>{this.props.groupdata.GroupName}</strong></span>\r\n            {progressPar}\r\n            </CardBody>\r\n          }\r\n        </Row>\r\n        </div>\r\n      );\r\n    }\r\n    else\r\n    {\r\n      return(\"\");\r\n    }\r\n  }\r\n}\r\n\r\n  export default GroupsFromItem;","import React, { Component } from 'react';\r\nimport {  Card,  CardBody} from 'reactstrap';\r\n\r\n\r\n\r\nclass MachinesDashboard extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n\r\n        MachinesCurrentdetails: [],\r\n        IsLoaded: false,\r\n        \r\n      };\r\n\r\n    }\r\n\r\n    \r\n  componentWillMount(){\r\n\r\n    if(window.location.hostname === \"localhost\")\r\n    {\r\n      var ApiGetMachinesCurrentdetails = 'http://localhost:50474/api/GetMachinesCurrentdetails'\r\n    }\r\n    else{\r\n      var ApiGetMachinesCurrentdetails = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetMachinesCurrentdetails'\r\n    }\r\n      fetch(ApiGetMachinesCurrentdetails)\r\n      .then(response => response.json())\r\n      .then(MachinesCurrentdetails => this.setState({\r\n        MachinesCurrentdetails:MachinesCurrentdetails,\r\n        IsLoaded: true\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n    }\r\n\r\n    // else\r\n    // {\r\n    //   fetch('http://proj.ruppin.ac.il/bgroup87/prod/api/GetMachinesCurrentdetails')\r\n    //   .then(response => response.json())\r\n    //   .then(MachinesCurrentdetails => this.setState({\r\n    //     MachinesCurrentdetails:MachinesCurrentdetails,\r\n    //     IsLoaded: true\r\n    // }))\r\n    //   .catch(error => console.log('parsing failed', error))\r\n    // }\r\n  \r\n\r\n    render() {\r\n      let MachineDetail;\r\n        let Pname;\r\n        let Iname;\r\n        let Gname;\r\n        let Count;\r\n        let Scanned;\r\nif (this.state.IsLoaded) \r\n{\r\n  MachineDetail = this.state.MachinesCurrentdetails.filter((details) => {\r\n     if(details.MachineName == this.props.Machine.MachineName)\r\n     {\r\n      Pname = (<div className=\"h6 mb-0 \">{details.ProjectName} - {details.ProjectNum}</div>) \r\n      Iname = (<div className=\"h6 mb-0 \">{details.ItemName} - {details.ItemNum}</div>)\r\n      Gname = (<div className=\"h6 mb-0 \">{details.GroupName}</div>)\r\n      Count = (<div className=\"text-uppercase text-muted small\">{details.PartCount}</div>)\r\n      Scanned = (<div className=\"text-uppercase text-muted small\">{details.ScannedPartCount}</div>)\r\n      return (details)\r\n          \r\n     }\r\n\r\n  });\r\n\r\n  return(\r\n              \r\n    <Card className=\"h6 m-0\" style={{background: 'rgb(232, 246, 251)'}} >\r\n    <CardBody>\r\n      <div className=\"h3 text-muted text-right mb-2\">\r\n      <i className=\"fa fa-wrench\"></i>\r\n      </div>\r\n      <div className=\"text-center\">\r\n      <div className=\"h6 mb-0 font-weight-bold\">{this.props.Machine.MachineName}</div>\r\n      <br></br>\r\n      <small className=\"text-muted font-weight-bold\">פרוייקט בעבודה</small>\r\n      {Pname}\r\n      <small className=\"text-muted font-weight-bold\">שם פריט</small>\r\n      {Iname}\r\n      <small className=\"text-muted font-weight-bold\">שם קבוצה</small>\r\n      {Gname}\r\n      <small className=\"text-muted font-weight-bold\">חלקים שנסרקו</small>\r\n      <div className=\"brand-card-body\">\r\n      <div>\r\n        {Scanned}\r\n      </div>\r\n      <div>\r\n        {Count}\r\n      </div>\r\n    </div>\r\n      {/* <Progress className={progress.style} color=\"red\" value=\"25\" /> */}\r\n      </div>\r\n      \r\n    </CardBody>\r\n  </Card>\r\n\r\n   );\r\n\r\n  }\r\n  else\r\n  {\r\n    return(<div>{console.log(\"else\")}</div>);\r\n  }\r\n\r\n }\r\n\r\n}\r\n\r\nexport default MachinesDashboard;","import React, {Component} from 'react';\r\n\r\nimport {Progress } from 'reactstrap';\r\n\r\n\r\nclass ItemGroupsTiming extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n          return(\r\n   \r\n                <div className=\"progress-group\">\r\n                      <div className=\"progress-group-prepend text-center\">\r\n                        <span className=\"progress-group-text font-weight-bold\">\r\n                      {this.props.Group.GroupName}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <div className=\"progress-group-prepend text-center\">\r\n                        <span className=\"ml-auto font-weight-bold\">\r\n                        הכנה\r\n                        </span>\r\n                      </div>\r\n                        <div className=\"small text-muted text-right\"> <span>זמן בפועל</span></div>\r\n                        <Progress className=\"progress-xs\" color=\"success\" value={(this.props.Group.CurrentPrepTime/this.props.Group.EstPrepTime)*100} />\r\n                        <div className=\"small text-muted text-right\"> <span>זמן משוער</span></div>\r\n                        <Progress className=\"progress-xs\" animated color=\"warning\" value=\"100\" />\r\n                        <div className=\"text-center\">{this.props.Group.CurrentPrepTime}/{this.props.Group.EstPrepTime}<span className=\"ml-auto font-weight-bold\" style={{position: 'absolute'}} >&nbsp;&nbsp;({((this.props.Group.CurrentPrepTime/this.props.Group.EstPrepTime)*100).toFixed()}%)</span></div>\r\n                      </div>\r\n                     \r\n                      <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <div className=\"progress-group-prepend text-center\">\r\n                        <span className=\"ml-auto font-weight-bold\">\r\n                        נגרייה\r\n                        </span>\r\n                      </div>\r\n                        <div className=\"small text-muted text-right\"> <span>זמן בפועל</span></div>\r\n                        <Progress className=\"progress-xs\" color=\"success\" value={(this.props.Group.CurrentCarpTime/this.props.Group.EstCarpTime)*100} />\r\n                        <div className=\"small text-muted text-right\"> <span>זמן משוער</span></div>\r\n                        <Progress className=\"progress-xs\" animated color=\"warning\" value=\"100\" />\r\n                        <div className=\"text-center\">{this.props.Group.CurrentCarpTime}/{this.props.Group.EstCarpTime}<span className=\"ml-auto font-weight-bold\" style={{position: 'absolute'}} >&nbsp;&nbsp;({((this.props.Group.CurrentCarpTime/this.props.Group.EstCarpTime)*100).toFixed()}%)</span></div>\r\n                      </div>\r\n                    \r\n                      <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <div className=\"progress-group-prepend text-center\">\r\n                        <span className=\"ml-auto font-weight-bold\">\r\n                        צבע\r\n                        </span>\r\n                      </div>\r\n                        <div className=\"small text-muted text-right\"> <span>זמן בפועל</span></div>\r\n                        <Progress className=\"progress-xs\" color=\"success\" value={(this.props.Group.CurrentColorTime/this.props.Group.EstColorTime)*100} />\r\n                        <div className=\"small text-muted text-right\"> <span>זמן משוער</span></div>\r\n                        <Progress className=\"progress-xs\" animated color=\"warning\" value=\"100\" />\r\n                        <div className=\"text-center\">{this.props.Group.CurrentColorTime}/{this.props.Group.EstColorTime}<span className=\"ml-auto font-weight-bold\" style={{position: 'absolute'}} >&nbsp;&nbsp;({((this.props.Group.CurrentColorTime/this.props.Group.EstColorTime)*100).toFixed()}%)</span></div>\r\n                      </div>\r\n                </div>\r\n          );\r\n      }\r\n\r\n}\r\n\r\nexport default ItemGroupsTiming;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardBody, Progress, Button } from 'reactstrap';\r\n\r\n\r\nclass GroupsFromProject extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSelectChangeItemName = this.handleSelectChangeItemName.bind(this)\r\n\r\n    this.state = {\r\n      GroupsFromDB: this.props.groupdata,\r\n      itemNumFetching: '',\r\n      callParent: false\r\n    };\r\n}\r\n\r\n\r\n\r\nhandleSelectChangeItemName(e){\r\n{console.log(\"clicked\")};\r\n// {console.log(e.currentTarget)}\r\n// {console.log(e)}\r\n// e.currentTarget.style.border = 'solid black';\r\n  this.state.itemNumFetching = e.currentTarget.getAttribute('data-itemnum');\r\n  if(window.location.hostname === \"localhost\"){\r\n    var ApiGetGroupsFromSpecificItem = 'http://localhost:50474/api/GetGroups?ProjectNum=' + this.props.projectNum + \"&ItemNum=\" + this.state.itemNumFetching\r\n  }\r\n  else{\r\n    var ApiGetGroupsFromSpecificItem = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetGroups?ProjectNum=' + this.props.projectNum + \"&ItemNum=\" + this.state.itemNumFetching\r\n  }\r\n  fetch(ApiGetGroupsFromSpecificItem)\r\n  .then(response => response.json())\r\n  .then(GroupsFromDB => this.setState({\r\n    GroupsFromDB:GroupsFromDB,\r\n    callParent: true\r\n}))\r\n.catch(error => console.log('parsing failed', error))\r\n\r\n}\r\n\r\n\r\n//after calling props.handler\r\nshouldComponentUpdate(){\r\n  this.state.callParent=false;\r\n  return true;\r\n}\r\n\r\n  render(){\r\n\r\n      let cardColor;\r\n      let progressColor;\r\n      let counterAccomplishedGroup=0;\r\n      let itemNum = this.props.itemnum;\r\n\r\n      if(this.state.callParent){\r\n        this.props.handler(this.state.GroupsFromDB)\r\n      }\r\n\r\n        this.props.groupdata.map(function(group)\r\n        {\r\n          if((itemNum==group.ItemNum) && (group.GroupStatus==\"קבוצה סיום\"))\r\n          {\r\n            counterAccomplishedGroup++;\r\n          }\r\n        })  \r\n\r\n        if (counterAccomplishedGroup==0) {\r\n          cardColor='danger'\r\n          progressColor = <Progress color='dark' value='0' />\r\n        }\r\n        else if (counterAccomplishedGroup==this.props.itemdata.ItemGroupCount) {\r\n          cardColor='success'\r\n          progressColor = <Progress color='success' value='100' />\r\n        }\r\n        else {\r\n          cardColor='info'\r\n          progressColor = <Progress color='info' value={(counterAccomplishedGroup/this.props.itemdata.ItemGroupCount)*100} />\r\n        } \r\n\r\n\r\n        return(\r\n          <Card color={cardColor} style={{boxSizing:'none'}}>\r\n          {/* style={{border:'solid black'}} */}\r\n          {/* <Button style={{border:'none'}} active block color={cardColor} className=\"buttonClass\" aria-pressed=\"true\" */}\r\n          <Button active block color={cardColor} className=\"card-body\" aria-pressed=\"true\"\r\n          onClick={this.handleSelectChangeItemName} data-itemnum={this.props.itemdata.ItemNum}>\r\n          <CardBody style={{wordWrap:'normal', padding: '10px'}}>\r\n            <div className=\"h4 m-0 text-center\">{this.props.itemdata.ItemNum}<br />{this.props.itemdata.ItemName}</div>\r\n            <div className=\"text-right\">{this.props.itemdata.ItemGroupCount} קבוצות\r\n                {progressColor}\r\n                <small>{counterAccomplishedGroup} מתוך {this.props.itemdata.ItemGroupCount} הושלמו</small>\r\n            </div>\r\n          </CardBody>\r\n          </Button>\r\n        </Card>\r\n        );\r\n      // }\r\n      // else{\r\n      //     return (\"\");\r\n      //   }\r\n  }\r\n\r\n}\r\n\r\nexport default GroupsFromProject;","import React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\n\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Row,\n  Table,\n  FormGroup,\n  Label,\n  Input,\n  CardGroup,\n  Navbar,\n  Nav,\n  NavLink\n} from 'reactstrap';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\n//import ItemsFromProject from '../Dashboard/ItemsFromProject';\nimport GroupsFromItem from '../Dashboard/GroupsFromItem';\nimport MachinesDashboard from '../Dashboard/MachinesDashboard';\nimport * as ReactDOM from \"react-dom\";\nimport DirectionProvider, { DIRECTIONS } from 'react-with-direction/dist/DirectionProvider'\nimport ItemGroupsTiming from '../Dashboard/ItemGroupsTiming';\nimport GroupsFromProject from './GroupsFromProject';\n\n\n\n\n\n// var bar = {\n//   labels: \"\",\n//   datasets: [\n//     {\n//       label: 'ימים שנותרו לאספקה',\n//       backgroundColor: 'rgba(32, 224, 35,0.7)', \n//       borderColor: 'rgba(32, 224, 35,1)',\n//       borderWidth: 1,\n//       hoverBackgroundColor: 'rgba(32, 224, 35,0.4)',\n//       hoverBorderColor: 'rgba(32, 224, 35,1)',\n//       data: [],\n//     },\n//   ],\n// };\n\nvar bar = {\n  labels: [],\n  datasets: [\n    {\n      label: 'ימים שנותרו לאספקה',\n      backgroundColor: [], \n      borderColor: [],\n      borderWidth: 1,\n      hoverBackgroundColor: [],\n      hoverBorderColor: [],\n      data: [],\n    },\n  ],\n};\n\n\nvar options = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false\n}\n\n// var machineBar = {\n//   labels: \"\",\n//   datasets: [\n//     {\n//       label: 'קבוצות ממתינות',\n//       backgroundColor: 'rgba(32, 224, 35,0.7)',\n//       borderColor: 'rgba(32, 224, 35,1)',\n//       borderWidth: 1,\n//       hoverBackgroundColor: 'rgba(32, 224, 35,0.4)',\n//       hoverBorderColor: 'rgba(32, 224, 35,1)',\n//       data: [],\n//     },\n//   ],\n// };\n\nvar machineBar = {\n  labels: \"\",\n  datasets: [\n    {\n      label: 'קבוצות ממתינות',\n      backgroundColor: [],\n      borderColor: [],\n      borderWidth: 1,\n      hoverBackgroundColor: [],\n      hoverBorderColor: [],\n      data: [],\n    },\n  ],\n};\n\nvar optionsMachineBar = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  'onClick' : function (evt, item) {\n    // console.log ('legend onClick', evt);\n    // console.log('legd item', item[0]);\n    // console.log('data', machineBar.getElementsAtEvent(evt));\n    console.log('data222', machineBar.datasets[0].data);\n  },\n  scales: {\n    yAxes: [{\n        ticks: {\n            beginAtZero:true,\n            stepSize: 1,\n            min: 0,\n            max: 6  \n          }\n        }]\n     }\n    }\n\n\n      let navbarHader = <DirectionProvider direction={DIRECTIONS.RTL}>\n      <div className=\"text-muted\" style={{}}>\n          <Navbar color=\"dark\">\n            <Nav className=\"mr-auto\" >\n              <NavLink style={{color: 'white'}} href=\"/\">דשבורדים</NavLink>\n              <NavLink style={{color: 'white'}} href=\"http://proj.ruppin.ac.il/bgroup87/test1/Manufacture/Project.html\">פרוייקטים</NavLink>\n              <NavLink style={{color: 'white'}} href=\"http://proj.ruppin.ac.il/bgroup87/test1//Manufacture/Item.html?ProjectNum=all\">פריטים</NavLink>\n              <NavLink style={{color: 'white'}} href=\"http://proj.ruppin.ac.il/bgroup87/test1/Manufacture/RouteMainPage.html\">מסלולים</NavLink>\n              <NavLink style={{color: 'white'}} href=\"http://proj.ruppin.ac.il/bgroup87/test1/Manufacture/Groups.html\">קבוצות מוכנות</NavLink>\n            </Nav>\n            <img className=\"d-inline-block align-top\" style={{height:'70px'}} src=\"Logo.jpg\"/>\n          </Navbar>\n      </div>\n      </DirectionProvider>  \n\n\n\nvar oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Widget03 = lazy(() => import('../../views/Widgets/Widget03'));\n\nconst brandPrimary = getStyle('--primary')\nconst brandSuccess = getStyle('--success')\nconst brandInfo = getStyle('--info')\nconst brandWarning = getStyle('--warning')\nconst brandDanger = getStyle('--danger')\n\n// Card Chart 1\nconst cardChartData1 = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: brandPrimary,\n      borderColor: 'rgba(255,255,255,.55)',\n      data: [65, 59, 84, 84, 51, 55, 40],\n    },\n  ],\n};\n\nconst cardChartOpts1 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: 'transparent',\n          zeroLineColor: 'transparent',\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: 'transparent',\n        },\n\n      }],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5,\n        },\n      }],\n  },\n  elements: {\n    line: {\n      borderWidth: 1,\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4,\n    },\n  }\n}\n\n\n// Card Chart 2\nconst cardChartData2 = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: brandInfo,\n      borderColor: 'rgba(255,255,255,.55)',\n      data: [1, 18, 9, 17, 34, 22, 11],\n    },\n  ],\n};\n\nconst cardChartOpts2 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: 'transparent',\n          zeroLineColor: 'transparent',\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: 'transparent',\n        },\n\n      }],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\n          max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5,\n        },\n      }],\n  },\n  elements: {\n    line: {\n      tension: 0.00001,\n      borderWidth: 1,\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4,\n    },\n  },\n};\n\n// Card Chart 3\nconst cardChartData3 = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: 'rgba(255,255,255,.2)',\n      borderColor: 'rgba(255,255,255,.55)',\n      data: [78, 81, 80, 45, 34, 12, 40],\n    },\n  ],\n};\n\nconst cardChartOpts3 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      }],\n    yAxes: [\n      {\n        display: false,\n      }],\n  },\n  elements: {\n    line: {\n      borderWidth: 2,\n    },\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n    },\n  },\n};\n\n// Card Chart 4\nconst cardChartData4 = {\n  labels: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\n  datasets: [\n    {\n      label: 'Alex First dataset',\n      backgroundColor: 'rgba(255,255,255,.3)',\n      borderColor: 'transparent',\n      data: [78, 81, 80, 45, 34, 12, 40, 75, 34, 89, 32, 68, 54, 72, 18, 98],\n    },\n  ],\n};\n\nconst cardChartOpts4 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n        barPercentage: 0.6, //מראה ברוחים מסודרים את הברים בגרף\n      }],\n    yAxes: [\n      {\n        display: false,\n      }],\n  },\n};\n\n// Social Box Chart\nconst socialBoxData = [\n  { data: [65, 59, 84, 84, 51, 55, 40], label: 'facebook' },\n  { data: [1, 13, 9, 17, 34, 41, 38], label: 'twitter' },\n  { data: [78, 81, 80, 45, 34, 12, 40], label: 'linkedin' },\n  { data: [35, 23, 56, 22, 97, 23, 64], label: 'google' },\n];\n\nconst makeSocialBoxData = (dataSetNo) => {\n  const dataset = socialBoxData[dataSetNo];\n  const data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        backgroundColor: 'rgba(255,255,255,.1)',\n        borderColor: 'rgba(255,255,255,.55)',\n        pointHoverBackgroundColor: '#fff',\n        borderWidth: 2,\n        data: dataset.data,\n        label: dataset.label,\n      },\n    ],\n  };\n  return () => data;\n};\n\nconst socialChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      }],\n    yAxes: [\n      {\n        display: false,\n      }],\n  },\n  elements: {\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3,\n    },\n  },\n};\n\n// sparkline charts\nconst sparkLineChartData = [\n  {\n    data: [35, 23, 56, 22, 97, 23, 64],\n    label: 'New Clients',\n  },\n  {\n    data: [65, 59, 84, 84, 51, 55, 40],\n    label: 'Recurring Clients',\n  },\n  {\n    data: [35, 23, 56, 22, 97, 23, 64],\n    label: 'Pageviews',\n  },\n  {\n    data: [65, 59, 84, 84, 51, 55, 40],\n    label: 'Organic',\n  },\n  {\n    data: [78, 81, 80, 45, 34, 12, 40],\n    label: 'CTR',\n  },\n  {\n    data: [1, 13, 9, 17, 34, 41, 38],\n    label: 'Bounce Rate',\n  },\n];\n\nconst makeSparkLineData = (dataSetNo, variant) => {\n  const dataset = sparkLineChartData[dataSetNo];\n  const data = {\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n    datasets: [\n      {\n        backgroundColor: 'transparent',\n        borderColor: variant ? variant : '#c2cfd6',\n        data: dataset.data,\n        label: dataset.label,\n      },\n    ],\n  };\n  return () => data;\n};\n\nconst sparklineChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: true,\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      }],\n    yAxes: [\n      {\n        display: false,\n      }],\n  },\n  elements: {\n    line: {\n      borderWidth: 2,\n    },\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3,\n    },\n  },\n  legend: {\n    display: false,\n  },\n};\n\n// Main Chart\n\n//Random Numbers\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar elements = 27;\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (var i = 0; i <= elements; i++) {\n  data1.push(random(50, 200));\n  data2.push(random(80, 100));\n  data3.push(65);\n}\n\nconst mainChart = {\n  labels: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: '#fff',\n      borderWidth: 2,\n      data: data1,\n    },\n    {\n      label: 'My Second dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandSuccess,\n      pointHoverBackgroundColor: '#fff',\n      borderWidth: 2,\n      data: data2,\n    },\n    {\n      label: 'My Third dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandDanger,\n      pointHoverBackgroundColor: '#fff',\n      borderWidth: 1,\n      borderDash: [8, 5],\n      data: data3,\n    },\n  ],\n};\n\nconst mainChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips,\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    callbacks: {\n      labelColor: function(tooltipItem, chart) {\n        return { backgroundColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor }\n      }\n    }\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          drawOnChartArea: false,\n        },\n      }],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          stepSize: Math.ceil(250 / 5),\n          max: 250,\n        },\n      }],\n  },\n  elements: {\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3,\n    },\n  },\n};\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n    this.handler = this.handler.bind(this)\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n      ProjectsFromDB: [],\n      ItemsFromDB: [],\n      GroupsFromDB: [],\n      GetAllGroupsProjects: [],\n      AllGroupProjectFromDB: [],\n      IsLoaded: false,\n      IsLoadedItem : false,\n      IsLoadedGroups: false,\n      IsLoadedAllGroupsProjects: false,\n      IsLoadedAllGroupProjectFromDB: false,\n      selectedProjectTmp: '',\n      projectNum : '',\n      itemNum : ''\n    };\n  }\n\n  handler(someValue) {\n    // console.log(someValue)\n    this.setState({\n      GroupsFromDB: someValue\n    })\n    // console.log(this.state.GroupsFromDB)\n\n  }\n\n\n  componentWillMount(){\n    // console.log(\"willmount\")\n    if(window.location.hostname === \"localhost\")\n    {\n// -------מחזיר את כל הפרוייקטים---------------------\n      var ApiGetAllProject = 'http://localhost:50474/api/project'\n      fetch(ApiGetAllProject)\n      .then(response => response.json())\n      .then(ProjectsFromDB => this.setState({\n        IsLoaded: true,\n        ProjectsFromDB:ProjectsFromDB,\n        projectNum:ProjectsFromDB[0].ProjectNum\n    }))\n    .catch(error => console.log('parsing failed', error))\n\n// ------------מחזיר את כל הקבוצות הקיימות --------------------\n    var ApiGetAllGroupsProjects = 'http://localhost:50474/api/Groups'\n    fetch(ApiGetAllGroupsProjects)\n    .then(response => response.json())\n    .then(GetAllGroupsProjects => this.setState({\n      IsLoadedAllGroupsProjects: true,\n      GetAllGroupsProjects : GetAllGroupsProjects\n      \n  }))\n  .catch(error => console.log('parsing failed', error))\n    }\n\n    else\n    {\n      fetch('http://proj.ruppin.ac.il/bgroup87/test1/api/project')\n      .then(response => response.json())\n      .then(ProjectsFromDB => this.setState({\n        ProjectsFromDB:ProjectsFromDB,\n        projectNum:ProjectsFromDB[0].ProjectNum,\n        IsLoaded: true\n    }))\n      .catch(error => console.log('parsing failed', error))\n\n\n      fetch('http://proj.ruppin.ac.il/bgroup87/test1/api/Groups')\n      .then(response => response.json())\n      .then(GetAllGroupsProjects => this.setState({\n        GetAllGroupsProjects : GetAllGroupsProjects,\n        IsLoadedAllGroupsProjects: true\n    }))\n    .catch(error => console.log('parsing failed', error))\n    }\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n\nSetProjectDataToBarChart(){\n    let dayCalculate = 0;\n    bar.labels = this.state.ProjectsFromDB.map((Project) => Project.ProjectName)\n    bar.datasets[0].data = this.state.ProjectsFromDB.map(function(Project){\n      // bar.labels.push(Project.ProjectName)\n      dayCalculate = Math.round(((new Date(Project.SupplyDate)).getTime() - (new Date()).getTime())/(oneDay))\n      if (dayCalculate>30)\n      {\n        bar.datasets[0].backgroundColor.push('rgba(32, 224, 35,0.7)')\n        bar.datasets[0].borderColor.push('rgba(32, 224, 35,1)')\n        bar.datasets[0].hoverBackgroundColor.push('rgba(32, 224, 35,0.4)')\n        bar.datasets[0].hoverBorderColor.push('rgba(32, 224, 35,1)')\n      }\n      else if (dayCalculate>0){\n        bar.datasets[0].backgroundColor.push('rgba(246, 60, 58,0.7)')\n        bar.datasets[0].borderColor.push('rgba(246, 60, 58,1)')\n        bar.datasets[0].hoverBackgroundColor.push('rgba(246, 60, 58,0.7)')\n        bar.datasets[0].hoverBorderColor.push('rgba(246, 60, 58,1)')\n      }\n      else {\n        bar.datasets[0].backgroundColor.push('rgba(0,0,0,1)')\n        bar.datasets[0].borderColor.push('rgba(0,0,0,1)')\n        bar.datasets[0].hoverBackgroundColor.push('rgba(0,0,0,0.5)')\n        bar.datasets[0].hoverBorderColor.push('rgba(0,0,0,1)')\n      }\n      return dayCalculate;\n    })\n  }\n\n\n  SetGroupsDataToBarChart(){\n    // console.log('GetAllGroupsProjects')\n    // console.log(this.state.GetAllGroupsProjects)\n    let machinesName=this.state.GroupsFromDB.mlist.map((Machine) => Machine.MachineName)\n    machineBar.labels = machinesName\n    var machineWait = this.state.GetAllGroupsProjects.filter(t=>t.GroupStatus.startsWith('ממתין'))\n    .map(Group => Group.GroupStatus) // get all groups status\n    .filter((machineWait, index, array) => array.indexOf(machineWait) === index), // filter out duplicates\n\n  countsWaiting = machineWait\n    .map(machineWait => ({\n      station: machineWait.slice(9,machineWait.length - 6),\n      count: this.state.GetAllGroupsProjects.filter(item => item.GroupStatus === machineWait).length\n    }));\n\n      var machinesCounts = []\n      let maxWaiting= 0\n      let backgroundCharts = []\n      for(let i=0; i<machinesName.length; i++){\n        let colored = false\n        for(let j=0; j<countsWaiting.length; j++){\n          if(machinesName[i]==countsWaiting[j].station){\n            machinesCounts[i]=countsWaiting[j].count\n\n            colored=true;\n            if(machinesCounts[i]>maxWaiting){\n              maxWaiting=machinesCounts[i]\n            }\n          }\n        }\n        if (colored){\n          backgroundCharts[i]=machinesCounts[i];\n        }\n        else backgroundCharts[i]=0;\n      }\n      optionsMachineBar.scales.max = maxWaiting+2\n      machineBar.datasets[0].data = machinesCounts\n      for (let i=0; i<backgroundCharts.length; i++){\n\n//----------------- להגדיל את התנאי לפחות מ6 כשיהיו יותר נתונים-----------------\n        if(backgroundCharts[i]<2){\n//--------------------------------שינוי התנאי------------------------------------------------\n          machineBar.datasets[0].backgroundColor.push('rgba(32, 224, 35,0.7)')\n          machineBar.datasets[0].borderColor.push('rgba(32, 224, 35,1)')\n          machineBar.datasets[0].hoverBackgroundColor.push('rgba(32, 224, 35,0.4)')\n          machineBar.datasets[0].hoverBorderColor.push('rgba(32, 224, 35,1)')\n        }\n        else{\n          machineBar.datasets[0].backgroundColor.push('rgba(246, 60, 58,0.7)')\n          machineBar.datasets[0].borderColor.push('rgba(246, 60, 58,1)')\n          machineBar.datasets[0].hoverBackgroundColor.push('rgba(246, 60, 58,0.7)')\n          machineBar.datasets[0].hoverBorderColor.push('rgba(246, 60, 58,1)')\n        }\n      }    \n    }\n\n\n\n  handleSelectChangeProjectName = (event) => {\n\n    this.state.IsLoadedGroups = false;\n    var projectNumTmp = event.target.options[event.target.selectedIndex].getAttribute('projnum')\n    this.state.selectedProjectTmp = event.target.options[event.target.selectedIndex].text\n    if(window.location.hostname === \"localhost\"){\n      var ApiGetItemFromSpecificProject = 'http://localhost:50474/api/GetProjectItems?ProjectNum='+ event.target.options[event.target.selectedIndex].getAttribute('projnum')\n      var ApiGetGroupFromSpecificProject = 'http://localhost:50474/api/GetGroupsFromAllProject?projectNum='+ event.target.options[event.target.selectedIndex].getAttribute('projnum')\n    }\n    else{\n      var ApiGetItemFromSpecificProject = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetProjectItems?ProjectNum='+ event.target.options[event.target.selectedIndex].getAttribute('projnum')\n      var ApiGetGroupFromSpecificProject = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetGroupsFromAllProject?projectNum='+ event.target.options[event.target.selectedIndex].getAttribute('projnum')\n    }\n    fetch(ApiGetItemFromSpecificProject)\n    .then(response => response.json())\n    .then(ItemsFromDB => this.setState({\n      ItemsFromDB:ItemsFromDB, \n      projectNum: projectNumTmp,\n      itemNum :  ItemsFromDB[0].ItemNum\n\n  }))\n  .catch(error => console.log('parsing failed', error))\n\n  // if(window.location.hostname === \"localhost\"){\n  // var ApiGetGroupFromSpecificProject = 'http://localhost:50474/api/GetGroupsFromAllProject?projectNum='+ event.target.options[event.target.selectedIndex].getAttribute('projnum')\n  // }\n  // else{\n  //   var ApiGetGroupFromSpecificProject = 'http://proj.ruppin.ac.il/bgroup87/prod/api/GetGroupsFromAllProject?projectNum='+ event.target.options[event.target.selectedIndex].getAttribute('projnum')\n  // }\n  fetch(ApiGetGroupFromSpecificProject)\n    .then(response => response.json())\n    .then(AllGroupProjectFromDB => this.setState({\n      AllGroupProjectFromDB:AllGroupProjectFromDB,\n      IsLoadedAllGroupProjectFromDB : true\n  }))\n  .catch(error => console.log('parsing failed', error))\n  \n  }\n\n  shouldComponentUpdate()\n  {\n    // console.log(\"Update\")\n    //console.log(ProjectsFromDB)\n    // console.log(this.state.IsLoaded)\n    // console.log(this.state.IsLoadedAllGroupsProjects)\n    // console.log(this.state.IsLoadedItem)\n    // console.log(this.state.IsLoadedGroups)\n    //if (this.state.IsLoaded && this.state.IsLoadedAllGroupsProjects && (!this.state.IsLoadedItem)) {\n      if (this.state.IsLoaded && (!this.state.IsLoadedItem)) {\n      // console.log(\"first if\")\n      // {console.log(this.state.ProjectsFromDB)}\n      if(window.location.hostname === \"localhost\"){\n      var ApiGetItemFromSpecificProject = 'http://localhost:50474/api/GetProjectItems?ProjectNum='+this.state.projectNum\n      var ApiGetGroupFromSpecificProject = 'http://localhost:50474/api/GetGroupsFromAllProject?projectNum='+ this.state.projectNum\n      }\n      else{\n        var ApiGetItemFromSpecificProject = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetProjectItems?ProjectNum='+this.state.projectNum\n        var ApiGetGroupFromSpecificProject = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetGroupsFromAllProject?projectNum='+ this.state.projectNum\n      }\n      \n      fetch(ApiGetItemFromSpecificProject)\n      .then(response => response.json())\n      .then(ItemsFromDB => this.setState({\n        ItemsFromDB:ItemsFromDB,\n        itemNum : ItemsFromDB[0].ItemNum,\n        IsLoadedItem : true\n    }))\n    .catch(error => console.log('parsing failed', error))\n\n    // if(window.location.hostname === \"localhost\"){\n    // var ApiGetGroupFromSpecificProject = 'http://localhost:50474/api/GetGroupsFromAllProject?projectNum='+ this.state.projectNum\n    // }\n    // else{\n    //   var ApiGetGroupFromSpecificProject = 'http://proj.ruppin.ac.il/bgroup87/prod/api/GetGroupsFromAllProject?projectNum='+ this.state.projectNum\n    // }\n    fetch(ApiGetGroupFromSpecificProject)\n      .then(response => response.json())\n      .then(AllGroupProjectFromDB => this.setState({\n        AllGroupProjectFromDB:AllGroupProjectFromDB,\n        IsLoadedAllGroupProjectFromDB : true\n    }))\n    .catch(error => console.log('parsing failed', error))\n    \n    }\n\n    if (this.state.IsLoaded && this.state.IsLoadedItem && (!this.state.IsLoadedGroups) )\n    {\n      // console.log(\"second if\")\n      if(window.location.hostname === \"localhost\"){\n      var ApiGetGroupsFromSpecificItem = 'http://localhost:50474/api/GetGroups?ProjectNum=' + this.state.projectNum + \"&ItemNum=\" + this.state.itemNum\n      }\n      else{\n        var ApiGetGroupsFromSpecificItem = 'http://proj.ruppin.ac.il/bgroup87/test1/api/GetGroups?ProjectNum=' + this.state.projectNum + \"&ItemNum=\" + this.state.itemNum\n      }\n      fetch(ApiGetGroupsFromSpecificItem)\n      .then(response => response.json())\n      .then(GroupsFromDB => this.setState({\n        GroupsFromDB:GroupsFromDB, \n        IsLoadedGroups : true\n    }))\n    .catch(error => console.log('parsing failed', error))\n\n    }\n    return true;\n  }\n\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n    \n    console.log(this.state.IsLoadedAllGroupProjectFromDB);\n    if(this.state.IsLoaded && this.state.IsLoadedAllGroupsProjects && this.state.IsLoadedItem && this.state.IsLoadedGroups  && this.state.IsLoadedAllGroupProjectFromDB)    \n    {\n      {this.SetProjectDataToBarChart()}\n      {this.SetGroupsDataToBarChart()}\n\n      if (this.state.selectedProjectTmp=='') {\n        this.state.selectedProjectTmp = this.state.ProjectsFromDB[0].ProjectName + ' ' + this.state.ProjectsFromDB[0].ProjectNum \n      }\n      \n  return (      \n      <div className=\"animated fadeIn\" >\n      {navbarHader}\n        \n\n\n<div style={{paddingRight:'10px'}}>\n  \n    <Row style={{marginLeft: '0px', marginRight: '0px', height: '100%'}}>\n\n\n     {/* ------------------------------------עומס על מכונות----------------- */}\n      <Col xs=\"12\" sm=\"6\" lg=\"6\" style={{padding: '0px', display:'grid'}}>\n        <Card>\n            <CardHeader className=\"text-center\">\n              <i className=\"fa fa-group fa-lg mt-4\"></i><strong> מס' הקבוצות הממתינות בכל תחנה</strong>\n            </CardHeader >\n            <CardBody style={{background: 'rgb(232, 246, 251)'}}>\n              <div className=\"chart-wrapper\">\n                <Bar data={machineBar} options={optionsMachineBar} />\n              </div>\n            </CardBody>\n          </Card>\n      </Col>\n\n            {/* ///////////////////////ימים שנותרו עד אספקה///////////////// */}\n\n          <Col xs=\"12\" sm=\"6\" lg=\"6\" style={{padding: '0px', display:'grid'}}>\n            \n          <Card>\n            <CardHeader className=\"text-center\">\n             \n            <i className=\"fa fa-align-justify mt-4\"></i><strong>ימים שנותרו עד אספקה</strong>\n            </CardHeader>\n            <CardBody style={{background: 'rgb(232, 246, 251)'}}>\n              <div className=\"chart-wrapper\">\n                <Bar data={bar} options={options} />\n              </div>\n            </CardBody>\n          </Card>\n         \n          </Col>\n\n</Row>\n\n<Row style={{marginLeft: '0px', marginRight: '0px', height: '100%'}}>\n            \n            {/* ------------------------------------תחנות שהקבוצות השלימו----------------- */}\n            <Col xs=\"12\" sm=\"6\" lg=\"6\" style={{padding: '0px', display:'grid'}}>\n              <Card>\n              <CardHeader className=\"text-center\">\n                <i className=\"fa fa-align-justify mt-4\"></i><strong>מיקום הקבוצה במסלול</strong>\n              </CardHeader>\n                <CardBody style={{background: 'rgb(232, 246, 251)'}}>\n                <DirectionProvider direction={DIRECTIONS.RTL}>\n                  <Row>\n                  {/* {console.log(\"this.state.GroupsFromDB.Glist\")}\n                  {console.log(this.state.GroupsFromDB.Glist)} */}\n                    <Col style={{padding: '0px'}} xs=\"12\">\n                      {(this.state.GroupsFromDB.Glist.length!=0) &&\n                          this.state.GroupsFromDB.Glist.map((Group) =>\n                          <GroupsFromItem groupdata={Group}/>\n                          )                         \n                      }\n                    </Col>\n                  </Row>\n                  </DirectionProvider>\n                  </CardBody>\n              </Card>\n            </Col>\n            \n            {/* ---------------נתוני פריטים בפרוייקט----------------- */}\n          <Col xs=\"12\" sm=\"6\" lg=\"6\" style={{padding: '0px', display:'grid'}}>\n              <Card>\n              {/* בחירה של איזה פרוייקט להראות */}\n              <CardHeader className=\"text-center\">\n                <i className=\"fa fa-align-justify mt-4\"></i><strong>שם פרוייקט</strong>\n                <DirectionProvider direction={DIRECTIONS.RTL}>\n                        <FormGroup>\n                              <Row xs=\"12\" md=\"9\">\n                              {/* <small>    בחר</small> */}\n                              <Input type=\"select\" name=\"select\" id=\"selectProject\" \n                                onChange={this.handleSelectChangeProjectName}>\n                                <option hidden>{this.state.selectedProjectTmp}</option>\n                                {\n                                this.state.ProjectsFromDB.map((Project, index) =>\n                                <option key={index} value={index} projnum={Project.ProjectNum}>{Project.ProjectName} {Project.ProjectNum}</option>)\n                                }\n                              </Input>\n                              </Row>                       \n                        </FormGroup>\n                  </DirectionProvider>\n              </CardHeader>\n                <CardBody style={{background: 'rgb(232, 246, 251)'}}> \n                <DirectionProvider direction={DIRECTIONS.RTL}>               \n                  <Row>\n                    <Col style={{padding: '0px'}} xs=\"12\">\n                    <Row>\n                      {\n                        this.state.ItemsFromDB.map((Item) =>\n                          <Col xs=\"3\" sm=\"6\" lg=\"3\">\n                            <GroupsFromProject handler={this.handler} itemdata={Item} projectNum={this.state.projectNum} itemnum={Item.ItemNum} groupdata={this.state.AllGroupProjectFromDB.Glist}/>\n                          </Col>\n                          )\n                      }\n                    </Row>\n                    </Col>\n                  </Row>    \n                  </DirectionProvider>             \n                </CardBody>\n              </Card>\n            </Col>\n\n\n</Row>\n\n\n{/* ------------------------------------אחוז התקדמות הקבוצות----------------- */}\n<Row style={{marginLeft: '0px', marginRight: '0px', height: '100%'}}>\n<Col xs=\"12\" sm=\"6\" lg=\"12\" style={{padding: '0px', display:'grid'}}>\n          <Card>\n          <CardHeader className=\"text-center\">\n          {<br></br>}\n            <i className=\"fa fa-group fa-lg\"></i><strong>אחוז התקדמות הקבוצות</strong>\n          </CardHeader> \n          <CardBody style={{background: 'rgb(232, 246, 251)'}}>\n            {this.state.GroupsFromDB.Glist.map((group) => \n              <div>\n              <ItemGroupsTiming Group={group}/>\n              <br></br>\n              </div>\n            )}\n                    <div className=\"legend text-center\">\n                      <small>\n                      &nbsp;&nbsp;\n                        <sup className=\"px-1\"><Badge pill color=\"success\">&nbsp;&nbsp;</Badge></sup>\n                        &nbsp;&nbsp;\n                        זמן משוער\n                        &nbsp;&nbsp;\n                        <sup className=\"px-1\"><Badge pill animated color=\"warning\">&nbsp;&nbsp;</Badge></sup>\n                        &nbsp;&nbsp;\n                        זמן בפועל\n                      </small>\n                    </div>\n          </CardBody>\n        </Card>\n        </Col>\n</Row>\n\n{/* /////////////////////////////// Machine Dashboard - Details ////////////////////////// */}\n\n<Row style={{marginLeft: '0px', marginRight: '0px', height: '100%'}}>\n      <Col xs=\"12\" sm=\"6\" lg=\"12\" style={{padding: '0px', display:'grid'}}>\n        <Card>\n          <CardHeader className=\"text-center\">\n          <i className=\"fa fa-gears fa-lg mt-4\"></i><strong>מצב המכונות</strong>\n          </CardHeader> \n          <CardBody style={{background: 'rgba(32, 168, 216, 0.1)'}}>\n          <CardGroup className=\"mb-4\">\n            {this.state.GroupsFromDB.mlist.map((machine) => \n              \n              <MachinesDashboard Machine={machine} Projects={this.state.ProjectsFromDB}/>\n              \n              \n            )}\n            </CardGroup>\n          </CardBody>\n        </Card>\n      </Col>\n</Row>\n\n\n  \n      </div>\n      </div>\n    );\n    }\n    else\n    {\n      return(<div>{console.log(\"else\")}</div>);\n    } \n  }\n}\n\n\nexport default Dashboard;","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es6/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es6/set'\nimport 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\nimport Dashboard from './views/Dashboard/Dashboard';\n//import DirectionProvider, { DIRECTIONS } from 'react-with-direction/dist/DirectionProvider';\n\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n  render() {\n    return (\n      //<DirectionProvider direction={DIRECTIONS.RTL}>\n      <HashRouter>\n          <React.Suspense fallback={loading()}>\n            <Switch>\n              <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>} />\n              <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} />\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n              <Route path=\"/\" name=\"Home\" render={props => <Dashboard {...props} />} />\n              {/* <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props} />} /> */}\n            </Switch>\n          </React.Suspense>\n      </HashRouter>\n      //</DirectionProvider>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}